# GraphQL Code Generator Configuration
# Generates TypeScript types from GraphQL schema and operations

schema: './src/graphql/schema.graphql'
# documents: './src/graphql/**/*.graphql'  # Will add this when we have operations
generates:
  # Generated TypeScript types for schema
  ./src/generated/graphql.ts:
    plugins:
      - typescript
      - typescript-resolvers
    config:
      useIndexSignature: true
      # Generate resolver types that match our database models
      mappers:
        Artist: '../lib/types/database#Artist as DatabaseArtist'
        Album: '../lib/types/database#Album as DatabaseAlbum'
        Track: '../lib/types/database#Track as DatabaseTrack'
        AudioFeatures: '../lib/types/database#AudioFeatures as DatabaseAudioFeatures'
      # Configure scalar types
      scalars:
        DateTime: Date
        UUID: string
        JSON: any
      # Resolver configuration
      contextType: '../lib/graphql/context#GraphQLContext'
      maybeValue: T | null | undefined
      inputMaybeValue: T | null | undefined
      
  # Generated types for GraphQL operations (queries/mutations) - disabled for now
  # ./src/generated/operations.ts:
  #   plugins:
  #     - typescript
  #     - typescript-operations
  #   config:
  #     useIndexSignature: true
  #     scalars:
  #       DateTime: Date
  #       UUID: string
  #       JSON: any

# Hook configuration for automatic generation
hooks:
  afterOneFileWrite:
    - prettier --write
